{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\lectures\\\\nomad_coder\\\\react-masterclass\\\\react-masterclass_2\\\\my-app\\\\src\\\\routes\\\\Price.tsx\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from \"react-query\";\nimport { fetchCoinInfo, fetchCoinTickers } from \"./api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Price(_ref) {\n  _s();\n\n  let {\n    coinId\n  } = _ref;\n  const {\n    isLoading: infoLoading,\n    data: infoData\n  } = useQuery([\"info\", coinId], () => fetchCoinInfo(coinId));\n  const {\n    isLoading: tickersLoading,\n    data: tickersData\n  } = useQuery([\"tickers\", coinId], () => fetchCoinTickers(coinId));\n  const present = tickersData === null || tickersData === void 0 ? void 0 : tickersData.quotes.USD.price.toFixed(3);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Price\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\uD604\\uC2DC\\uC138: \\uC57D $\", present * 1209.82, \" \\uC6D0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Price, \"fVy/awfNNJDW4eiHQFt9ga9TZX4=\", false, function () {\n  return [useQuery, useQuery];\n});\n\n_c = Price;\nexport default Price;\n\nvar _c;\n\n$RefreshReg$(_c, \"Price\");","map":{"version":3,"sources":["D:/workspace/lectures/nomad_coder/react-masterclass/react-masterclass_2/my-app/src/routes/Price.tsx"],"names":["useQuery","fetchCoinInfo","fetchCoinTickers","Price","coinId","isLoading","infoLoading","data","infoData","tickersLoading","tickersData","present","quotes","USD","price","toFixed"],"mappings":";;;AAAA,SAAqBA,QAArB,QAAqC,aAArC;AAEA,SAA2BC,aAA3B,EAA0CC,gBAA1C,QAAkE,OAAlE;;;;AAqEA,SAASC,KAAT,OAAmC;AAAA;;AAAA,MAApB;AAACC,IAAAA;AAAD,GAAoB;AAC/B,QAAM;AAACC,IAAAA,SAAS,EAACC,WAAX;AAAuBC,IAAAA,IAAI,EAACC;AAA5B,MAAsCR,QAAQ,CAChD,CAAC,MAAD,EAAQI,MAAR,CADgD,EAC/B,MAAIH,aAAa,CAACG,MAAD,CADc,CAApD;AAEA,QAAM;AAACC,IAAAA,SAAS,EAAEI,cAAZ;AAA2BF,IAAAA,IAAI,EAACG;AAAhC,MAA6CV,QAAQ,CACvD,CAAC,SAAD,EAAWI,MAAX,CADuD,EACnC,MAAIF,gBAAgB,CAACE,MAAD,CADe,CAA3D;AAEA,QAAMO,OAAO,GAAGD,WAAH,aAAGA,WAAH,uBAAGA,WAAW,CAAEE,MAAb,CAAoBC,GAApB,CAAwBC,KAAxB,CAA8BC,OAA9B,CAAsC,CAAtC,CAAhB;AACA,sBACI;AAAA,4BACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADI,eAEJ;AAAA,iDAAaJ,OAAO,GAAC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFI;AAAA,kBADJ;AAMH;;GAZQR,K;UACuCH,Q,EAEOA,Q;;;KAH9CG,K;AAaT,eAAeA,KAAf","sourcesContent":["import { useQueries, useQuery } from \"react-query\";\r\nimport { useParams } from \"react-router\";\r\nimport { fetchCoinHistory, fetchCoinInfo, fetchCoinTickers } from \"./api\";\r\nimport ApexChart from \"react-apexcharts\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\ninterface IHistorical {\r\n    time_open: string;\r\ntime_close: string;\r\nhigh:number;\r\nopen:number; \r\nlow: number;\r\nclose: number;\r\nvolume:number;\r\nmarket_cap:number;\r\n}\r\ninterface InfoData{\r\n    id : string;\r\n    name : string;\r\n    symbol : string;\r\n    rank : number;\r\n    is_new : boolean;\r\n    is_active : boolean;\r\n    type : string;\r\n    description : string;\r\n    message : string;\r\n    open_source : boolean;\r\n    started_at : string;\r\n    development_status : string;\r\n    hardware_wallet : boolean;\r\n    proof_type : string;\r\n    org_structure : string;\r\n    hash_algorithm : string;\r\n    first_data_at : string;\r\n    last_data_at : string;\r\n}\r\ninterface PriceData{\r\n    id : string;\r\n    name : string;\r\n    symbol : string;\r\n    rank : number;\r\n    circulating_supply : number;\r\n    total_supply : number;\r\n    max_supply : number;\r\n    beta_value : number;\r\n    first_data_at : string;\r\n    last_updated : string;\r\n    quotes : {\r\n      USD: {\r\n        ath_date: string;\r\n    ath_price:number;\r\n    market_cap:number\r\n    market_cap_change_24h:number;\r\n    percent_change_1h:number;\r\n    percent_change_1y:number;\r\n    percent_change_6h:number;\r\n    percent_change_7d:number;\r\n    percent_change_12h:number;\r\n    percent_change_15m:number\r\n    percent_change_24h:number;\r\n    percent_change_30d:number;\r\n    percent_change_30m:number;\r\n    percent_from_price_ath:number;\r\n    price:number;\r\n    volume_24h:number;\r\n    volume_24h_change_24h:number;\r\n      }\r\n    };\r\n}\r\ninterface CharProps{\r\n    coinId:string;\r\n}\r\nfunction Price({coinId}:CharProps ){\r\n    const {isLoading:infoLoading,data:infoData}=useQuery<InfoData>(\r\n        [\"info\",coinId], ()=>fetchCoinInfo(coinId));\r\n    const {isLoading: tickersLoading,data:tickersData}=useQuery<PriceData>(\r\n        [\"tickers\",coinId], ()=>fetchCoinTickers(coinId));\r\n    const present = tickersData?.quotes.USD.price.toFixed(3);\r\n    return (\r\n        <>\r\n    <h1>Price</h1>\r\n    <h2>현시세: 약 ${present*1209.82} 원</h2>\r\n    </>\r\n    )\r\n}\r\nexport default Price;"]},"metadata":{},"sourceType":"module"}