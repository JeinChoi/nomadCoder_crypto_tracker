{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\lectures\\\\nomad_coder\\\\react-masterclass\\\\react-masterclass_2\\\\my-app\\\\src\\\\index.tsx\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { ThemeProvider } from 'styled-components';\nimport App from './App';\nimport { lightTheme } from './theme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst queryClient = new QueryClient();\n;\nconst [theme, setTheme] = useState(\"\");\nsetTheme(\"darkTheme\");\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(QueryClientProvider, {\n    client: queryClient,\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: lightTheme,\n      children: /*#__PURE__*/_jsxDEV(App, {\n        theme: theme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals","map":{"version":3,"sources":["D:/workspace/lectures/nomad_coder/react-masterclass/react-masterclass_2/my-app/src/index.tsx"],"names":["React","useState","ReactDOM","QueryClient","QueryClientProvider","ThemeProvider","App","lightTheme","queryClient","theme","setTheme","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAAQC,WAAR,EAAsBC,mBAAtB,QAAgD,aAAhD;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAAoBC,UAApB,QAAsC,SAAtC;;AAEA,MAAMC,WAAW,GAAG,IAAIL,WAAJ,EAApB;AAAsC;AACtC,MAAM,CAACM,KAAD,EAAOC,QAAP,IAAmBT,QAAQ,CAAC,EAAD,CAAjC;AACAS,QAAQ,CAAC,WAAD,CAAR;AACAR,QAAQ,CAACS,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,mBAAD;AAAqB,IAAA,MAAM,EAAEH,WAA7B;AAAA,2BACA,QAAC,aAAD;AAAe,MAAA,KAAK,EAAED,UAAtB;AAAA,6BACC,QAAC,GAAD;AAAK,QAAA,KAAK,EAAEE;AAAZ;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAQEG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CARF,E,CAWA;AACA;AACA","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport {QueryClient , QueryClientProvider} from 'react-query';\nimport { ThemeProvider } from 'styled-components';\nimport App from './App';\nimport { darkTheme, lightTheme } from './theme';\n\nconst queryClient = new QueryClient();;\nconst [theme,setTheme] = useState(\"\");\nsetTheme(\"darkTheme\");\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n    <ThemeProvider theme={lightTheme}>\n     <App theme={theme}/>\n   </ThemeProvider>\n  </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"]},"metadata":{},"sourceType":"module"}