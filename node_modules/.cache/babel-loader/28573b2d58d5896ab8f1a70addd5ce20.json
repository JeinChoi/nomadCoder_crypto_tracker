{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\lectures\\\\nomad_coder\\\\react-masterclass\\\\react-masterclass_2\\\\my-app\\\\src\\\\routes\\\\Chart.tsx\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from \"react-query\";\nimport { useParams } from \"react-router\";\nimport { fetchCoinHistory } from \"./api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chart(_ref) {\n  _s();\n\n  let {\n    coinId\n  } = _ref;\n  const params = useParams();\n  const {\n    isLoading,\n    data\n  } = useQuery([\"ohlcv\", coinId], () => fetchCoinHistory(coinId));\n  console.log(params);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Chart\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 12\n  }, this);\n}\n\n_s(Chart, \"QLPRAd+4m22vIRsbkbaje1vYlsA=\", false, function () {\n  return [useParams, useQuery];\n});\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["D:/workspace/lectures/nomad_coder/react-masterclass/react-masterclass_2/my-app/src/routes/Chart.tsx"],"names":["useQuery","useParams","fetchCoinHistory","Chart","coinId","params","isLoading","data","console","log"],"mappings":";;;AAAA,SAAqBA,QAArB,QAAqC,aAArC;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,gBAAT,QAAiC,OAAjC;;;AAIA,SAASC,KAAT,OAAkC;AAAA;;AAAA,MAAnB;AAACC,IAAAA;AAAD,GAAmB;AAC9B,QAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,QAAM;AAACK,IAAAA,SAAD;AAAWC,IAAAA;AAAX,MAAmBP,QAAQ,CAAC,CAAC,OAAD,EAASI,MAAT,CAAD,EAChC,MAAMF,gBAAgB,CAACE,MAAD,CADU,CAAjC;AAGCI,EAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACD,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEH;;GARQF,K;UACUF,S,EACUD,Q;;;KAFpBG,K;AAST,eAAeA,KAAf","sourcesContent":["import { useQueries, useQuery } from \"react-query\";\r\nimport { useParams } from \"react-router\";\r\nimport { fetchCoinHistory } from \"./api\";\r\ninterface CharProps{\r\n    coinId:string;\r\n}\r\nfunction Chart({coinId}:CharProps){\r\n    const params = useParams();\r\n    const {isLoading,data} = useQuery([\"ohlcv\",coinId],\r\n     () => fetchCoinHistory(coinId));\r\n\r\n     console.log(params);\r\n    return(<h1>Chart</h1>);\r\n   \r\n}\r\nexport default Chart;\r\n"]},"metadata":{},"sourceType":"module"}