{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\lectures\\\\nomad_coder\\\\react-masterclass\\\\react-masterclass_2\\\\my-app\\\\src\\\\routes\\\\Price.tsx\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from \"react-query\";\nimport { fetchCoinInfo, fetchCoinTickers } from \"./api\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Accent = styled.div`\ncolor:${props => props.theme.accentColor};\nfont-size:15px;\n`;\n_c = Accent;\n\nfunction Price(_ref) {\n  _s();\n\n  let {\n    coinId\n  } = _ref;\n  const {\n    isLoading: infoLoading,\n    data: infoData\n  } = useQuery([\"info\", coinId], () => fetchCoinInfo(coinId));\n  const {\n    isLoading: tickersLoading,\n    data: tickersData\n  } = useQuery([\"tickers\", coinId], () => fetchCoinTickers(coinId));\n  const present = tickersData === null || tickersData === void 0 ? void 0 : tickersData.quotes.USD.price.toFixed(3);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Accent, {\n      children: \"More Info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Price : \", present]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"first data at : \", infoData === null || infoData === void 0 ? void 0 : infoData.first_data_at, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"last updated : \", infoData === null || infoData === void 0 ? void 0 : infoData.last_data_at]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Accent, {\n      children: \"Price\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"percent change 15m : \", tickersData === null || tickersData === void 0 ? void 0 : tickersData.quotes.USD.percent_change_15m]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"percent change 1h : \", tickersData === null || tickersData === void 0 ? void 0 : tickersData.quotes.USD.percent_change_1h]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"percent change 6h : \", tickersData === null || tickersData === void 0 ? void 0 : tickersData.quotes.USD.percent_change_6h]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"percent change 12h : \", tickersData === null || tickersData === void 0 ? void 0 : tickersData.quotes.USD.percent_change_12h]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Price, \"fVy/awfNNJDW4eiHQFt9ga9TZX4=\", false, function () {\n  return [useQuery, useQuery];\n});\n\n_c2 = Price;\nexport default Price;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Accent\");\n$RefreshReg$(_c2, \"Price\");","map":{"version":3,"sources":["D:/workspace/lectures/nomad_coder/react-masterclass/react-masterclass_2/my-app/src/routes/Price.tsx"],"names":["useQuery","fetchCoinInfo","fetchCoinTickers","styled","Accent","div","props","theme","accentColor","Price","coinId","isLoading","infoLoading","data","infoData","tickersLoading","tickersData","present","quotes","USD","price","toFixed","first_data_at","last_data_at","percent_change_15m","percent_change_1h","percent_change_6h","percent_change_12h"],"mappings":";;;AAAA,SAAqBA,QAArB,QAAqC,aAArC;AAEA,SAA2BC,aAA3B,EAA0CC,gBAA1C,QAAkE,OAAlE;AAGA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAmEA,MAAMC,MAAM,GAAGD,MAAM,CAACE,GAAI;AAC1B,QAAQC,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,WAAY;AACzC;AACA,CAHA;KAAMJ,M;;AAIN,SAASK,KAAT,OAAmC;AAAA;;AAAA,MAApB;AAACC,IAAAA;AAAD,GAAoB;AAC/B,QAAM;AAACC,IAAAA,SAAS,EAACC,WAAX;AAAuBC,IAAAA,IAAI,EAACC;AAA5B,MAAsCd,QAAQ,CAChD,CAAC,MAAD,EAAQU,MAAR,CADgD,EAC/B,MAAIT,aAAa,CAACS,MAAD,CADc,CAApD;AAEA,QAAM;AAACC,IAAAA,SAAS,EAAEI,cAAZ;AAA2BF,IAAAA,IAAI,EAACG;AAAhC,MAA6ChB,QAAQ,CACvD,CAAC,SAAD,EAAWU,MAAX,CADuD,EACnC,MAAIR,gBAAgB,CAACQ,MAAD,CADe,CAA3D;AAEA,QAAMO,OAAO,GAAGD,WAAH,aAAGA,WAAH,uBAAGA,WAAW,CAAEE,MAAb,CAAoBC,GAApB,CAAwBC,KAAxB,CAA8BC,OAA9B,CAAsC,CAAtC,CAAhB;AACA,sBACI;AAAA,4BACJ,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADI,eAEJ;AAAA,6BAAaJ,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YAFI,eAGJ;AAAA,qCAAqBH,QAArB,aAAqBA,QAArB,uBAAqBA,QAAQ,CAAEQ,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,YAHI,eAIJ;AAAA,oCAAoBR,QAApB,aAAoBA,QAApB,uBAAoBA,QAAQ,CAAES,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,YAJI,eAKJ;AAAA;AAAA;AAAA;AAAA,YALI,eAMJ,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANI,eAOJ;AAAA,0CAA0BP,WAA1B,aAA0BA,WAA1B,uBAA0BA,WAAW,CAAEE,MAAb,CAAoBC,GAApB,CAAwBK,kBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,YAPI,eAQJ;AAAA,yCAAyBR,WAAzB,aAAyBA,WAAzB,uBAAyBA,WAAW,CAAEE,MAAb,CAAoBC,GAApB,CAAwBM,iBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA,YARI,eASJ;AAAA,yCAAyBT,WAAzB,aAAyBA,WAAzB,uBAAyBA,WAAW,CAAEE,MAAb,CAAoBC,GAApB,CAAwBO,iBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA,YATI,eAUJ;AAAA,0CAA0BV,WAA1B,aAA0BA,WAA1B,uBAA0BA,WAAW,CAAEE,MAAb,CAAoBC,GAApB,CAAwBQ,kBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,YAVI;AAAA,kBADJ;AAeH;;GArBQlB,K;UACuCT,Q,EAEOA,Q;;;MAH9CS,K;AAsBT,eAAeA,KAAf","sourcesContent":["import { useQueries, useQuery } from \"react-query\";\r\nimport { useParams } from \"react-router\";\r\nimport { fetchCoinHistory, fetchCoinInfo, fetchCoinTickers } from \"./api\";\r\nimport ApexChart from \"react-apexcharts\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport styled from \"styled-components\";\r\ninterface IHistorical {\r\n    time_open: string;\r\ntime_close: string;\r\nhigh:number;\r\nopen:number; \r\nlow: number;\r\nclose: number;\r\nvolume:number;\r\nmarket_cap:number;\r\n}\r\ninterface InfoData{\r\n    id : string;\r\n    name : string;\r\n    symbol : string;\r\n    rank : number;\r\n    is_new : boolean;\r\n    is_active : boolean;\r\n    type : string;\r\n    description : string;\r\n    message : string;\r\n    open_source : boolean;\r\n    started_at : string;\r\n    development_status : string;\r\n    hardware_wallet : boolean;\r\n    proof_type : string;\r\n    org_structure : string;\r\n    hash_algorithm : string;\r\n    first_data_at : string;\r\n    last_data_at : string;\r\n}\r\ninterface PriceData{\r\n    id : string;\r\n    name : string;\r\n    symbol : string;\r\n    rank : number;\r\n    circulating_supply : number;\r\n    total_supply : number;\r\n    max_supply : number;\r\n    beta_value : number;\r\n    first_data_at : string;\r\n    last_updated : string;\r\n    quotes : {\r\n      USD: {\r\n        ath_date: string;\r\n    ath_price:number;\r\n    market_cap:number\r\n    market_cap_change_24h:number;\r\n    percent_change_1h:number;\r\n    percent_change_1y:number;\r\n    percent_change_6h:number;\r\n    percent_change_7d:number;\r\n    percent_change_12h:number;\r\n    percent_change_15m:number\r\n    percent_change_24h:number;\r\n    percent_change_30d:number;\r\n    percent_change_30m:number;\r\n    percent_from_price_ath:number;\r\n    price:number;\r\n    volume_24h:number;\r\n    volume_24h_change_24h:number;\r\n      }\r\n    };\r\n}\r\ninterface CharProps{\r\n    coinId:string;\r\n}\r\nconst Accent = styled.div`\r\ncolor:${props => props.theme.accentColor};\r\nfont-size:15px;\r\n`;\r\nfunction Price({coinId}:CharProps ){\r\n    const {isLoading:infoLoading,data:infoData}=useQuery<InfoData>(\r\n        [\"info\",coinId], ()=>fetchCoinInfo(coinId));\r\n    const {isLoading: tickersLoading,data:tickersData}=useQuery<PriceData>(\r\n        [\"tickers\",coinId], ()=>fetchCoinTickers(coinId));\r\n    const present = tickersData?.quotes.USD.price.toFixed(3);\r\n    return (\r\n        <>\r\n    <Accent>More Info</Accent>\r\n    <h2>Price : {present}</h2>\r\n    <h2>first data at : {infoData?.first_data_at} </h2>\r\n    <h2>last updated : {infoData?.last_data_at}</h2>\r\n    <br></br>\r\n    <Accent>Price</Accent>\r\n    <h2>percent change 15m : {tickersData?.quotes.USD.percent_change_15m}</h2>\r\n    <h2>percent change 1h : {tickersData?.quotes.USD.percent_change_1h}</h2>\r\n    <h2>percent change 6h : {tickersData?.quotes.USD.percent_change_6h}</h2>\r\n    <h2>percent change 12h : {tickersData?.quotes.USD.percent_change_12h}</h2>\r\n        \r\n    </>\r\n    )\r\n}\r\nexport default Price;"]},"metadata":{},"sourceType":"module"}