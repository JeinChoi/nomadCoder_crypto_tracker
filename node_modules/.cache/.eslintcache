[{"D:\\workspace\\lectures\\nomad_coder\\react-masterclass\\react-masterclass_2\\my-app\\src\\index.tsx":"1","D:\\workspace\\lectures\\nomad_coder\\react-masterclass\\react-masterclass_2\\my-app\\src\\App.tsx":"2","D:\\workspace\\lectures\\nomad_coder\\react-masterclass\\react-masterclass_2\\my-app\\src\\theme.ts":"3","D:\\workspace\\lectures\\nomad_coder\\react-masterclass\\react-masterclass_2\\my-app\\src\\Router.tsx":"4","D:\\workspace\\lectures\\nomad_coder\\react-masterclass\\react-masterclass_2\\my-app\\src\\routes\\Coins.tsx":"5","D:\\workspace\\lectures\\nomad_coder\\react-masterclass\\react-masterclass_2\\my-app\\src\\routes\\Coin.tsx":"6","D:\\workspace\\lectures\\nomad_coder\\react-masterclass\\react-masterclass_2\\my-app\\src\\routes\\Chart.tsx":"7","D:\\workspace\\lectures\\nomad_coder\\react-masterclass\\react-masterclass_2\\my-app\\src\\routes\\Price.tsx":"8","D:\\workspace\\lectures\\nomad_coder\\react-masterclass\\react-masterclass_2\\my-app\\src\\routes\\api.ts":"9","D:\\workspace\\lectures\\nomad_coder\\react-masterclass\\react-masterclass_2\\my-app\\src\\selectThem.tsx":"10"},{"size":750,"mtime":1643391884251,"results":"11","hashOfConfig":"12"},{"size":2215,"mtime":1643391790445,"results":"13","hashOfConfig":"12"},{"size":525,"mtime":1643381189306,"results":"14","hashOfConfig":"12"},{"size":382,"mtime":1643208322331,"results":"15","hashOfConfig":"12"},{"size":3308,"mtime":1643390133098,"results":"16","hashOfConfig":"12"},{"size":6561,"mtime":1643392118178,"results":"17","hashOfConfig":"12"},{"size":1895,"mtime":1643375105964,"results":"18","hashOfConfig":"12"},{"size":2894,"mtime":1643395226534,"results":"19","hashOfConfig":"12"},{"size":741,"mtime":1643349041075,"results":"20","hashOfConfig":"12"},{"size":164,"mtime":1643395244740,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"td7kkx",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"31"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},"D:\\workspace\\lectures\\nomad_coder\\react-masterclass\\react-masterclass_2\\my-app\\src\\index.tsx",["51","52"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {QueryClient , QueryClientProvider} from 'react-query';\nimport { RecoilRoot } from \"recoil\";\nimport { ThemeProvider } from 'styled-components';\nimport App from './App';\nimport { selectTheme } from \"./selectThem\";\nconst queryClient = new QueryClient();\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n    <QueryClientProvider client={queryClient}>\n     <App />\n  </QueryClientProvider>\n  </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n","D:\\workspace\\lectures\\nomad_coder\\react-masterclass\\react-masterclass_2\\my-app\\src\\App.tsx",["53"],"import styled, { createGlobalStyle,ThemeProvider} from \"styled-components\";\nimport Router from \"./Router\";\nimport {ReactQueryDevtools} from \"react-query/devtools\";\nimport { useRecoilValue,RecoilRoot } from \"recoil\";\nimport { selectTheme } from \"./selectThem\";\nimport { darkTheme,lightTheme } from \"./theme\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@200&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n*{\n  box-sizing:border-box;\n}\nbody {\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${props=> props.theme.bgColor};\n  color:${props=>props.theme.textColor};\n}\na{\n  text-decoration:none;\n  color:inherit;\n}\n\n`;\n\nconst Container = styled.div`\n  background-color:${props => props.theme.bgColor};\n  color:${props => props.theme.textColor};\n  \n`;\n\nfunction App() {\nconst themes = useRecoilValue(selectTheme);\n  return <> \n    <Container>\n    <ThemeProvider theme={themes ? darkTheme : lightTheme}>\n    <GlobalStyle />\n    <Router />\n    <ReactQueryDevtools initialIsOpen={true} />\n    </ThemeProvider>\n    </Container>\n  </>;\n}\n\nexport default App;\n","D:\\workspace\\lectures\\nomad_coder\\react-masterclass\\react-masterclass_2\\my-app\\src\\theme.ts",["54"],"import { DefaultTheme } from \"styled-components\";\r\nimport { isWhiteSpaceLike } from \"typescript\";\r\n\r\nexport const darkTheme:DefaultTheme = {\r\n    textColor:\"#ecf0f1\",\r\n    bgColor:\"#353b48\",\r\n    accentColor:\"#009432\",\r\n    boxColor:\"#2f3640\",\r\n}\r\nexport const lightTheme:DefaultTheme = {\r\n    textColor:\"#353b48\", \r\n    bgColor:\"#f1f2f6\",\r\n    accentColor:\"#009432\",\r\n    boxColor:\"#dfe4ea\",\r\n}\r\n//dark 버전: 배경 남색, 글씨 남색, 박스 : 하얀색\r\n//light 버전 : 배경 흰색, 글씨 흰색 , 박스 : 남색",["55","56"],"D:\\workspace\\lectures\\nomad_coder\\react-masterclass\\react-masterclass_2\\my-app\\src\\Router.tsx",[],"D:\\workspace\\lectures\\nomad_coder\\react-masterclass\\react-masterclass_2\\my-app\\src\\routes\\Coins.tsx",["57","58","59","60","61","62"],"import { useEffect, useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSetRecoilState,RecoilRoot } from \"recoil\";\r\nimport styled from \"styled-components\";\r\nimport { isPropertySignature } from \"typescript\";\r\nimport { selectTheme } from \"../selectThem\";\r\nimport { lightTheme } from \"../theme\";\r\nimport { fetchCoins } from \"./api\";\r\nconst Container = styled.div`\r\n    padding: 0px 20px;\r\n    max-width:480px;\r\n    margin:0 auto;\r\n`;\r\n\r\nconst Header = styled.div`\r\n    height:10vh;\r\n    display:flex;\r\n    justify-content:center;\r\n    align-items:center;\r\n    position:relative;\r\n`;\r\n\r\nconst CoinsList = styled.ul``;\r\n\r\nconst Coin = styled.li`\r\n    background-color:${(props) => props.theme.boxColor};\r\n    color:${(props) => props.theme.textColor};\r\n    \r\n    margin-bottom:10px;\r\n    border-radius:15px;\r\n   \r\n    a{\r\n          display:flex;\r\n          align-items:center;\r\n      padding:20px;\r\n        transition:color 0.2s ease-in;\r\n      \r\n    }\r\n    &:hover{\r\n        a{\r\n            color:${(props)=>props.theme.accentColor};\r\n        }\r\n    }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n    color:${props => props.theme.accentColor};\r\n`;\r\nconst Setting=styled.button`\r\n    position:absolute;\r\n    right:25px;\r\n    font-size:25px;\r\n`;\r\nfunction changeTheme(){\r\n  //  setTheme((prev)=> !prev);\r\n    console.log(selectTheme);\r\n    //return chanTheme;\r\n    \r\n} \r\nconst Loader = styled.span`\r\n    text-align:center;\r\n    display:block;\r\n\r\n`;\r\nconst Img = styled.img`\r\n    width:35px;\r\n    height:35px;\r\n    margin-right:10px;\r\n`;\r\ninterface ICoin {\r\n    id: string;\r\n    name: string;\r\n    symbol: string;\r\n    rank: number;\r\n    is_new: boolean;\r\n    is_active: boolean;\r\n    type: string;\r\n    }\r\nfunction Coins(){\r\n    \r\n    const setTheme = useSetRecoilState(selectTheme);\r\n    const toggleTheme = ()=> (setTheme((prev)=> !prev));\r\n    const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\",fetchCoins)\r\n    // const [coins,setCoins]=useState<CoinInterface[]>([]);\r\n    // const [loading,setLoading] = useState(true);\r\n    // useEffect(()=>{\r\n    //     (async()=>{\r\n    //         const response = await fetch(\"https://api.coinpaprika.com/v1/coins\");\r\n    //         const json = await response.json();\r\n    //         setCoins(json.slice(0,100));\r\n    //         setLoading(false);\r\n    //     })();\r\n    // },[]);\r\n    return (    \r\n    <Container>\r\n         <Helmet>\r\n        <title>\r\n         코인\r\n        </title>\r\n      </Helmet>\r\n        <Header>\r\n            <Title>코인</Title>\r\n            <Setting onClick={toggleTheme}>🎨</Setting>\r\n        </Header>\r\n        { isLoading ? (\r\n          <Loader>Loading...</Loader>\r\n          ) : (  \r\n          <CoinsList>\r\n            {data?.slice(0,100).map((coin)=>(\r\n            <Coin key={coin.id}>\r\n                <Link to={{\r\n                    pathname:`/${coin.id}`,\r\n                    state:{name:coin.name},\r\n                    }}>\r\n                    <Img src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`} />\r\n                    {coin.name} &rarr;\r\n                   </Link>\r\n            </Coin>\r\n            ))}            \r\n        </CoinsList>\r\n    )}\r\n    </Container>);\r\n}\r\nexport default Coins;","D:\\workspace\\lectures\\nomad_coder\\react-masterclass\\react-masterclass_2\\my-app\\src\\routes\\Coin.tsx",["63","64","65","66"],"import { useEffect, useState } from \"react\";\r\nimport { Route, Switch, useLocation, useParams, useRouteMatch } from \"react-router\";\r\nimport styled from \"styled-components\";\r\nimport Router from \"../Router\";\r\nimport Price from \"./Price\";\r\nimport Chart from \"./Chart\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useQuery } from \"react-query\";\r\nimport { fetchCoinInfo, fetchCoinTickers } from \"./api\";\r\nimport {Helmet} from \"react-helmet\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport { selectTheme } from \"../selectThem\";\r\n\r\nconst Title = styled.h1`\r\n    color:${props => props.theme.accentColor};\r\n`;\r\nconst Setting=styled.button`\r\n    position:absolute;\r\n    right:25px;\r\n    font-size:25px;\r\n`;\r\nconst Loader = styled.span`\r\n    text-align:center;\r\n    display:block;\r\n\r\n`;\r\n\r\nconst Container = styled.div`\r\n    padding: 0px 20px;\r\n    max-width:480px;\r\n    margin:0 auto;\r\n`;\r\n\r\nconst Header = styled.div`\r\n    height:10vh;\r\n    display:flex;\r\n    justify-content:center;\r\n    align-items:center;\r\n    position:relative;\r\n\r\n    `;\r\nconst BackButton = styled.div`\r\n  width:50px;\r\n  height:40px;\r\n  position:absolute;\r\n  left:10px;\r\n  bottom:20px;\r\n  font-size:15px;\r\n  color:${props => props.theme.accentColor};\r\n`;\r\nconst Overview = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: ${props => props.theme.boxColor};\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n`;\r\nconst OverviewItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  span:first-child {\r\n    font-size: 10px;\r\n    font-weight: 400;\r\n    text-transform: uppercase;\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\nconst Description = styled.p`\r\n  margin: 20px 0px;\r\n`;\r\nconst Tabs = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  margin: 25px 0px;\r\n  gap: 10px;\r\n`;\r\n\r\nconst Tab = styled.span<{ isActive: boolean }>`\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  background-color:  ${props => props.theme.boxColor};;\r\n  padding: 7px 0px;\r\n  border-radius: 10px;\r\n  color: ${(props) =>\r\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\r\n  a {\r\n    display: block;\r\n  }\r\n`;\r\n\r\ninterface RouterParams{\r\n    coinId:string;\r\n}\r\ninterface RouterState{\r\n    name:string;\r\n}\r\ninterface ITag{\r\n    coin_counter: number;\r\n    ico_counter: number;\r\n    id: string;\r\n    name: string;\r\n}\r\n\r\ninterface InfoData{\r\n    id : string;\r\n    name : string;\r\n    symbol : string;\r\n    rank : number;\r\n    is_new : boolean;\r\n    is_active : boolean;\r\n    type : string;\r\n    description : string;\r\n    message : string;\r\n    open_source : boolean;\r\n    started_at : string;\r\n    development_status : string;\r\n    hardware_wallet : boolean;\r\n    proof_type : string;\r\n    org_structure : string;\r\n    hash_algorithm : string;\r\n    first_data_at : string;\r\n    last_data_at : string;\r\n}\r\ninterface PriceData{\r\n    id : string;\r\n    name : string;\r\n    symbol : string;\r\n    rank : number;\r\n    circulating_supply : number;\r\n    total_supply : number;\r\n    max_supply : number;\r\n    beta_value : number;\r\n    first_data_at : string;\r\n    last_updated : string;\r\n    quotes : {\r\n      USD: {\r\n        ath_date: string;\r\n    ath_price:number;\r\n    market_cap:number\r\n    market_cap_change_24h:number;\r\n    percent_change_1h:number;\r\n    percent_change_1y:number;\r\n    percent_change_6h:number;\r\n    percent_change_7d:number;\r\n    percent_change_12h:number;\r\n    percent_change_15m:number\r\n    percent_change_24h:number;\r\n    percent_change_30d:number;\r\n    percent_change_30m:number;\r\n    percent_from_price_ath:number;\r\n    price:number;\r\n    volume_24h:number;\r\n    volume_24h_change_24h:number;\r\n      }\r\n    };\r\n}\r\nfunction Coin(){\r\n  const setTheme = useSetRecoilState(selectTheme);\r\n  const toggleTheme = ()=> (setTheme((prev)=> !prev));\r\n    const { coinId } = useParams<RouterParams>();\r\n    const {state} = useLocation<RouterState>();\r\n  \r\n    const priceMatch = useRouteMatch(\"/:coinId/price\");\r\n    const chartMatch = useRouteMatch(\"/:coinId/chart\");\r\n    const {isLoading:infoLoading,data:infoData}=useQuery<InfoData>(\r\n      [\"info\",coinId], ()=>fetchCoinInfo(coinId));\r\n    const {isLoading: tickersLoading,data:tickersData}=useQuery<PriceData>(\r\n      [\"tickers\",coinId], ()=>fetchCoinTickers(coinId)\r\n      ,{\r\n        refetchInterval: 5000,\r\n      }\r\n      );\r\n  \r\n    const loading = infoLoading || tickersLoading;\r\n    return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n        {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\r\n        </title>\r\n      </Helmet>\r\n\r\n    <Header>\r\n    <BackButton>\r\n        <Link to={`/`}>&lt; back</Link>\r\n            </BackButton>\r\n            \r\n        <Title>{state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}</Title>\r\n        <Setting onClick={toggleTheme}>🎨</Setting>\r\n    </Header>\r\n    { loading ?  (\r\n        <Loader>Loading...</Loader>\r\n      ) :  (\r\n        <>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Rank:</span>\r\n              <span>{infoData?.rank}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Symbol:</span>\r\n              <span>${infoData?.symbol}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Price:</span>\r\n              <span>${tickersData?.quotes.USD.price.toFixed(3)} </span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Description>{infoData?.description}</Description>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Total Suply:</span>\r\n              <span>{tickersData?.total_supply}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Max Supply:</span>\r\n              <span>{tickersData?.max_supply}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Tabs>\r\n            <Tab isActive={chartMatch !== null}>\r\n              <Link to={`/${coinId}/chart`}>Chart</Link>\r\n            </Tab>\r\n            <Tab isActive={priceMatch !== null}>\r\n              <Link to={`/${coinId}/price`}>Price</Link>\r\n            </Tab>\r\n          </Tabs>\r\n\r\n        \r\n          <Switch>\r\n            <Route path={`/${coinId}/price`}>\r\n                <Price coinId={coinId}/>\r\n            </Route>\r\n            <Route path={`/${coinId}/chart`}>              \r\n                <Chart coinId={coinId} />\r\n            </Route>\r\n          </Switch>\r\n        </>\r\n      )\r\n      }   \r\n       </Container>\r\n      );\r\n}\r\nexport default Coin;","D:\\workspace\\lectures\\nomad_coder\\react-masterclass\\react-masterclass_2\\my-app\\src\\routes\\Chart.tsx",["67","68","69"],"import { useQueries, useQuery } from \"react-query\";\r\nimport { useParams } from \"react-router\";\r\nimport { fetchCoinHistory } from \"./api\";\r\nimport ApexChart from \"react-apexcharts\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\ninterface IHistorical {\r\n    time_open: string;\r\ntime_close: string;\r\nhigh:number;\r\nopen:number; \r\nlow: number;\r\nclose: number;\r\nvolume:number;\r\nmarket_cap:number;\r\n}\r\n\r\ninterface CharProps{\r\n    coinId:string;\r\n}\r\nfunction Chart({coinId}:CharProps){\r\n    const {isLoading,data} = useQuery<IHistorical[]>(\r\n    [\"ohlcv\",coinId],\r\n     () => fetchCoinHistory(coinId),\r\n     {\r\n         refetchInterval: 10000,\r\n     }\r\n     );\r\n    return(<div>{isLoading ? \"Loading char...\": <ReactApexChart type=\"candlestick\" \r\n    series={[\r\n        {\r\n             data:data?.map((price)=>({\r\n                    x:price.time_close,\r\n                    y:[price.open.toFixed(2), \r\n                    price.high.toFixed(2),\r\n                     price.low.toFixed(2),\r\n                    price.close.toFixed(2)],\r\n                })) \r\n        }\r\n    ]}\r\n    options={{\r\n        theme:{\r\n            mode:\"dark\"\r\n        },\r\n        chart:{ \r\n            type:\"candlestick\",\r\n            height:300,\r\n            width:300,\r\n        toolbar:{\r\n            show:true,\r\n        },  \r\n        background:\"transparent\",\r\n      },\r\n     \r\n       grid:{\r\n            show:true,\r\n        },\r\n    yaxis:{\r\n       show:false,\r\n        tooltip: {\r\n            enabled: true\r\n          }\r\n        \r\n    },\r\n    xaxis:{\r\n        labels:{show:true},\r\n        axisTicks:{show:true},\r\n        axisBorder:{show:true},\r\n         type:\"datetime\",\r\n         categories: data?.map(price=>price.time_close),\r\n       \r\n    },\r\n   \r\n    tooltip:{\r\n        y: {\r\n            formatter: (value) => `$ ${value.toFixed(2)}`,\r\n        }\r\n    }\r\n    }}\r\n   />\r\n   }</div>);\r\n   \r\n}\r\nexport default Chart;\r\n","D:\\workspace\\lectures\\nomad_coder\\react-masterclass\\react-masterclass_2\\my-app\\src\\routes\\Price.tsx",["70","71","72","73","74","75","76","77"],"import { useQueries, useQuery } from \"react-query\";\r\nimport { useParams } from \"react-router\";\r\nimport { fetchCoinHistory, fetchCoinInfo, fetchCoinTickers } from \"./api\";\r\nimport ApexChart from \"react-apexcharts\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport styled from \"styled-components\";\r\ninterface IHistorical {\r\n    time_open: string;\r\ntime_close: string;\r\nhigh:number;\r\nopen:number; \r\nlow: number;\r\nclose: number;\r\nvolume:number;\r\nmarket_cap:number;\r\n}\r\ninterface InfoData{\r\n    id : string;\r\n    name : string;\r\n    symbol : string;\r\n    rank : number;\r\n    is_new : boolean;\r\n    is_active : boolean;\r\n    type : string;\r\n    description : string;\r\n    message : string;\r\n    open_source : boolean;\r\n    started_at : string;\r\n    development_status : string;\r\n    hardware_wallet : boolean;\r\n    proof_type : string;\r\n    org_structure : string;\r\n    hash_algorithm : string;\r\n    first_data_at : string;\r\n    last_data_at : string;\r\n}\r\ninterface PriceData{\r\n    id : string;\r\n    name : string;\r\n    symbol : string;\r\n    rank : number;\r\n    circulating_supply : number;\r\n    total_supply : number;\r\n    max_supply : number;\r\n    beta_value : number;\r\n    first_data_at : string;\r\n    last_updated : string;\r\n    quotes : {\r\n      USD: {\r\n        ath_date: string;\r\n    ath_price:number;\r\n    market_cap:number\r\n    market_cap_change_24h:number;\r\n    percent_change_1h:number;\r\n    percent_change_1y:number;\r\n    percent_change_6h:number;\r\n    percent_change_7d:number;\r\n    percent_change_12h:number;\r\n    percent_change_15m:number\r\n    percent_change_24h:number;\r\n    percent_change_30d:number;\r\n    percent_change_30m:number;\r\n    percent_from_price_ath:number;\r\n    price:number;\r\n    volume_24h:number;\r\n    volume_24h_change_24h:number;\r\n      }\r\n    };\r\n}\r\ninterface CharProps{\r\n    coinId:string;\r\n}\r\nconst Accent = styled.div`\r\ncolor:${props => props.theme.accentColor};\r\nfont-size:20px;\r\n`;\r\nfunction Price({coinId}:CharProps ){\r\n    const {isLoading:infoLoading,data:infoData}=useQuery<InfoData>(\r\n        [\"info\",coinId], ()=>fetchCoinInfo(coinId));\r\n    const {isLoading: tickersLoading,data:tickersData}=useQuery<PriceData>(\r\n        [\"tickers\",coinId], ()=>fetchCoinTickers(coinId));\r\n    const present = tickersData?.quotes.USD.price.toFixed(3);\r\n    return (\r\n        <>\r\n    <Accent>More Info</Accent>\r\n    <h2>Price : {present}</h2>\r\n    <h2>first data at : {infoData?.first_data_at} </h2>\r\n    <h2>last updated : {infoData?.last_data_at}</h2>\r\n    <br></br>\r\n    <Accent>Price</Accent>\r\n    <h2>percent change 15m : {tickersData?.quotes.USD.percent_change_15m}</h2>\r\n    <h2>percent change 1h : {tickersData?.quotes.USD.percent_change_1h}</h2>\r\n    <h2>percent change 6h : {tickersData?.quotes.USD.percent_change_6h}</h2>\r\n    <h2>percent change 12h : {tickersData?.quotes.USD.percent_change_12h}</h2>\r\n        \r\n    </>\r\n    )\r\n}\r\nexport default Price;","D:\\workspace\\lectures\\nomad_coder\\react-masterclass\\react-masterclass_2\\my-app\\src\\routes\\api.ts",[],"D:\\workspace\\lectures\\nomad_coder\\react-masterclass\\react-masterclass_2\\my-app\\src\\selectThem.tsx",["78"],"import { atom } from \"recoil\";\r\nimport { ThemeProvider } from \"styled-components\";\r\n\r\n\r\nexport const selectTheme = atom({\r\n   key: 'theme',\r\n    default:false,\r\n});",{"ruleId":"79","severity":1,"message":"80","line":5,"column":10,"nodeType":"81","messageId":"82","endLine":5,"endColumn":23},{"ruleId":"79","severity":1,"message":"83","line":7,"column":10,"nodeType":"81","messageId":"82","endLine":7,"endColumn":21},{"ruleId":"79","severity":1,"message":"84","line":4,"column":25,"nodeType":"81","messageId":"82","endLine":4,"endColumn":35},{"ruleId":"79","severity":1,"message":"85","line":2,"column":10,"nodeType":"81","messageId":"82","endLine":2,"endColumn":26},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"79","severity":1,"message":"90","line":1,"column":10,"nodeType":"81","messageId":"82","endLine":1,"endColumn":19},{"ruleId":"79","severity":1,"message":"91","line":1,"column":21,"nodeType":"81","messageId":"82","endLine":1,"endColumn":29},{"ruleId":"79","severity":1,"message":"84","line":5,"column":28,"nodeType":"81","messageId":"82","endLine":5,"endColumn":38},{"ruleId":"79","severity":1,"message":"92","line":7,"column":10,"nodeType":"81","messageId":"82","endLine":7,"endColumn":29},{"ruleId":"79","severity":1,"message":"93","line":9,"column":10,"nodeType":"81","messageId":"82","endLine":9,"endColumn":20},{"ruleId":"79","severity":1,"message":"94","line":56,"column":10,"nodeType":"81","messageId":"82","endLine":56,"endColumn":21},{"ruleId":"79","severity":1,"message":"90","line":1,"column":10,"nodeType":"81","messageId":"82","endLine":1,"endColumn":19},{"ruleId":"79","severity":1,"message":"91","line":1,"column":21,"nodeType":"81","messageId":"82","endLine":1,"endColumn":29},{"ruleId":"79","severity":1,"message":"95","line":4,"column":8,"nodeType":"81","messageId":"82","endLine":4,"endColumn":14},{"ruleId":"79","severity":1,"message":"96","line":100,"column":11,"nodeType":"81","messageId":"82","endLine":100,"endColumn":15},{"ruleId":"79","severity":1,"message":"97","line":1,"column":10,"nodeType":"81","messageId":"82","endLine":1,"endColumn":20},{"ruleId":"79","severity":1,"message":"98","line":2,"column":10,"nodeType":"81","messageId":"82","endLine":2,"endColumn":19},{"ruleId":"79","severity":1,"message":"99","line":4,"column":8,"nodeType":"81","messageId":"82","endLine":4,"endColumn":17},{"ruleId":"79","severity":1,"message":"97","line":1,"column":10,"nodeType":"81","messageId":"82","endLine":1,"endColumn":20},{"ruleId":"79","severity":1,"message":"98","line":2,"column":10,"nodeType":"81","messageId":"82","endLine":2,"endColumn":19},{"ruleId":"79","severity":1,"message":"100","line":3,"column":10,"nodeType":"81","messageId":"82","endLine":3,"endColumn":26},{"ruleId":"79","severity":1,"message":"99","line":4,"column":8,"nodeType":"81","messageId":"82","endLine":4,"endColumn":17},{"ruleId":"79","severity":1,"message":"101","line":5,"column":8,"nodeType":"81","messageId":"82","endLine":5,"endColumn":22},{"ruleId":"79","severity":1,"message":"102","line":7,"column":11,"nodeType":"81","messageId":"82","endLine":7,"endColumn":22},{"ruleId":"79","severity":1,"message":"103","line":78,"column":22,"nodeType":"81","messageId":"82","endLine":78,"endColumn":33},{"ruleId":"79","severity":1,"message":"104","line":80,"column":23,"nodeType":"81","messageId":"82","endLine":80,"endColumn":37},{"ruleId":"79","severity":1,"message":"80","line":2,"column":10,"nodeType":"81","messageId":"82","endLine":2,"endColumn":23},"@typescript-eslint/no-unused-vars","'ThemeProvider' is defined but never used.","Identifier","unusedVar","'selectTheme' is defined but never used.","'RecoilRoot' is defined but never used.","'isWhiteSpaceLike' is defined but never used.","no-native-reassign",["105"],"no-negated-in-lhs",["106"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'isPropertySignature' is defined but never used.","'lightTheme' is defined but never used.","'changeTheme' is defined but never used.","'Router' is defined but never used.","'ITag' is defined but never used.","'useQueries' is defined but never used.","'useParams' is defined but never used.","'ApexChart' is defined but never used.","'fetchCoinHistory' is defined but never used.","'ReactApexChart' is defined but never used.","'IHistorical' is defined but never used.","'infoLoading' is assigned a value but never used.","'tickersLoading' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]